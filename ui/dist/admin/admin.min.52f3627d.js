"use strict";var Bahmni;(Bahmni=Bahmni||{}).Common=Bahmni.Common||{},function(){var hostUrl=localStorage.getItem("host")?"https://"+localStorage.getItem("host"):"",rootDir=localStorage.getItem("rootDir")||"",RESTWS_V1=hostUrl+"/openmrs/ws/rest/v1",BAHMNI_CORE=RESTWS_V1+"/bahmnicore",EMRAPI=hostUrl+"/openmrs/ws/rest"+"/emrapi",BACTERIOLOGY=RESTWS_V1,BASE_URL=hostUrl+"/bahmni_config/openmrs/apps/",CUSTOM_URL=hostUrl+"/implementation_config/openmrs/apps/",authenticatedReferenceDataMap={"/openmrs/ws/rest/v1/idgen/identifiertype":"IdentifierTypes","/openmrs/module/addresshierarchy/ajax/getOrderedAddressHierarchyLevels.form":"AddressHierarchyLevels","/openmrs/ws/rest/v1/bahmnicore/sql/globalproperty?property=mrs.genders":"Genders","/openmrs/ws/rest/v1/bahmnicore/sql/globalproperty?property=bahmni.encountersession.duration":"encounterSessionDuration","/openmrs/ws/rest/v1/bahmnicore/sql/globalproperty?property=bahmni.relationshipTypeMap":"RelationshipTypeMap","/openmrs/ws/rest/v1/bahmnicore/config/bahmniencounter?callerContext=REGISTRATION_CONCEPTS":"RegistrationConcepts","/openmrs/ws/rest/v1/relationshiptype?v=custom:(aIsToB,bIsToA,uuid)":"RelationshipType","/openmrs/ws/rest/v1/personattributetype?v=custom:(uuid,name,sortWeight,description,format,concept)":"PersonAttributeType","/openmrs/ws/rest/v1/entitymapping?mappingType=loginlocation_visittype&s=byEntityAndMappingType":"LoginLocationToVisitTypeMapping","/openmrs/ws/rest/v1/bahmnicore/config/patient":"PatientConfig","/openmrs/ws/rest/v1/concept?s=byFullySpecifiedName&name=Consultation+Note&v=custom:(uuid,name,answers)":"ConsultationNote","/openmrs/ws/rest/v1/concept?s=byFullySpecifiedName&name=Lab+Order+Notes&v=custom:(uuid,name)":"LabOrderNotes","/openmrs/ws/rest/v1/concept?s=byFullySpecifiedName&name=Impression&v=custom:(uuid,name)":"RadiologyImpressionConfig","/openmrs/ws/rest/v1/concept?s=byFullySpecifiedName&name=All_Tests_and_Panels&v=custom:(uuid,name:(uuid,name),setMembers:(uuid,name:(uuid,name)))":"AllTestsAndPanelsConcept","/openmrs/ws/rest/v1/concept?s=byFullySpecifiedName&name=Dosage+Frequency&v=custom:(uuid,name,answers)":"DosageFrequencyConfig","/openmrs/ws/rest/v1/concept?s=byFullySpecifiedName&name=Dosage+Instructions&v=custom:(uuid,name,answers)":"DosageInstructionConfig","/openmrs/ws/rest/v1/bahmnicore/sql/globalproperty?property=bahmni.encounterType.default":"DefaultEncounterType","/openmrs/ws/rest/v1/concept?s=byFullySpecifiedName&name=Stopped+Order+Reason&v=custom:(uuid,name,answers)":"StoppedOrderReasonConfig","/openmrs/ws/rest/v1/ordertype":"OrderType","/openmrs/ws/rest/v1/bahmnicore/config/drugOrders":"DrugOrderConfig","/openmrs/ws/rest/v1/bahmnicore/sql/globalproperty?property=drugOrder.drugOther":"NonCodedDrugConcept"};authenticatedReferenceDataMap["/openmrs/ws/rest/v1/entitymapping?mappingType=location_encountertype&s=byEntityAndMappingType&entityUuid="+(localStorage.getItem("LoginInformation")?JSON.parse(localStorage.getItem("LoginInformation")).currentLocation.uuid:"")]="LoginLocationToEncounterTypeMapping",Bahmni.Common.Constants={hostURL:hostUrl,dateFormat:"dd/mm/yyyy",dateDisplayFormat:"DD-MMM-YYYY",timeDisplayFormat:"hh:mm",emrapiDiagnosisUrl:EMRAPI+"/diagnosis",bahmniDiagnosisUrl:BAHMNI_CORE+"/diagnosis/search",bahmniDeleteDiagnosisUrl:BAHMNI_CORE+"/diagnosis/delete",diseaseTemplateUrl:BAHMNI_CORE+"/diseaseTemplates",AllDiseaseTemplateUrl:BAHMNI_CORE+"/diseaseTemplate",emrapiConceptUrl:EMRAPI+"/concept",emrapiConditionConceptUrl:EMRAPI+"/conditionconcept",emrapiAllergyConceptUrl:EMRAPI+"/allergyconcept",encounterConfigurationUrl:BAHMNI_CORE+"/config/bahmniencounter",patientConfigurationUrl:BAHMNI_CORE+"/config/patient",drugOrderConfigurationUrl:BAHMNI_CORE+"/config/drugOrders",emrEncounterUrl:EMRAPI+"/encounter",encounterUrl:RESTWS_V1+"/encounter",locationUrl:RESTWS_V1+"/location",bahmniVisitLocationUrl:BAHMNI_CORE+"/visitLocation",bahmniOrderUrl:BAHMNI_CORE+"/orders",bahmniDrugOrderUrl:BAHMNI_CORE+"/drugOrders",bahmniDispositionByVisitUrl:BAHMNI_CORE+"/disposition/visit",bahmniDispositionByPatientUrl:BAHMNI_CORE+"/disposition/patient",bahmniSearchUrl:BAHMNI_CORE+"/search",bahmniDuplicateSearchUrl:BAHMNI_CORE+"/duplicatesearch",bahmniStatusBasedSearchUrl:BAHMNI_CORE+"/patientStatusBasedSearch",bahmniLabOrderResultsUrl:BAHMNI_CORE+"/labOrderResults",bahmniEncounterUrl:BAHMNI_CORE+"/bahmniencounter",conceptUrl:RESTWS_V1+"/concept",bahmniConceptAnswerUrl:RESTWS_V1+"/bahmniconceptanswer",conceptSearchByFullNameUrl:RESTWS_V1+"/concept?s=byFullySpecifiedName",visitUrl:RESTWS_V1+"/visit",endVisitUrl:BAHMNI_CORE+"/visit/endVisit",endVisitAndCreateEncounterUrl:BAHMNI_CORE+"/visit/endVisitAndCreateEncounter",visitTypeUrl:RESTWS_V1+"/visittype",patientImageUrlByPatientUuid:RESTWS_V1+"/patientImage?patientUuid=",labResultUploadedFileNameUrl:"/uploaded_results/",visitSummaryUrl:BAHMNI_CORE+"/visit/summary",encounterModifierUrl:BAHMNI_CORE+"/bahmniencountermodifier",openmrsUrl:hostUrl+"/openmrs",loggingUrl:hostUrl+"/log/",idgenConfigurationURL:RESTWS_V1+"/idgen/identifiertype",bahmniRESTBaseURL:BAHMNI_CORE+"",observationsUrl:BAHMNI_CORE+"/observations",obsRelationshipUrl:BAHMNI_CORE+"/obsrelationships",encounterImportUrl:BAHMNI_CORE+"/admin/upload/encounter",programImportUrl:BAHMNI_CORE+"/admin/upload/program",conceptImportUrl:BAHMNI_CORE+"/admin/upload/concept",conceptSetImportUrl:BAHMNI_CORE+"/admin/upload/conceptset",drugImportUrl:BAHMNI_CORE+"/admin/upload/drug",labResultsImportUrl:BAHMNI_CORE+"/admin/upload/labResults",referenceTermsImportUrl:BAHMNI_CORE+"/admin/upload/referenceterms",relationshipImportUrl:BAHMNI_CORE+"/admin/upload/relationship",conceptSetExportUrl:BAHMNI_CORE+"/admin/export/conceptset?conceptName=:conceptName",patientImportUrl:BAHMNI_CORE+"/admin/upload/patient",adminImportStatusUrl:BAHMNI_CORE+"/admin/upload/status",programUrl:RESTWS_V1+"/program",programEnrollPatientUrl:RESTWS_V1+"/bahmniprogramenrollment",programStateDeletionUrl:RESTWS_V1+"/programenrollment",programEnrollmentDefaultInformation:"default",programEnrollmentFullInformation:"full",programAttributeTypes:RESTWS_V1+"/programattributetype",relationshipTypesUrl:RESTWS_V1+"/relationshiptype",personAttributeTypeUrl:RESTWS_V1+"/personattributetype",diseaseSummaryPivotUrl:BAHMNI_CORE+"/diseaseSummaryData",allTestsAndPanelsConceptName:"All_Tests_and_Panels",dosageFrequencyConceptName:"Dosage Frequency",whoStageConceptName:"HTC, WHO Staging",dosageInstructionConceptName:"Dosage Instructions",stoppedOrderReasonConceptName:"Stopped Order Reason",consultationNoteConceptName:"Consultation Note",diagnosisConceptSet:"Diagnosis Concept Set",radiologyOrderType:"Radiology Order",radiologyResultConceptName:"Radiology Result",investigationEncounterType:"INVESTIGATION",validationNotesEncounterType:"VALIDATION NOTES",labOrderNotesConcept:"Lab Order Notes",impressionConcept:"Impression",qualifiedByRelationshipType:"qualified-by",dispositionConcept:"Disposition",dispositionGroupConcept:"Disposition Set",dispositionNoteConcept:"Disposition Note",ruledOutDiagnosisConceptName:"Ruled Out Diagnosis",emrapiConceptMappingSource:"org.openmrs.module.emrapi",abbreviationConceptMappingSource:"Abbreviation",includeAllObservations:!1,openmrsObsUrl:RESTWS_V1+"/obs",openmrsObsRepresentation:"custom:(uuid,obsDatetime,value:(uuid,name:(uuid,name)))",admissionCode:"ADMIT",dischargeCode:"DISCHARGE",transferCode:"TRANSFER",undoDischargeCode:"UNDO_DISCHARGE",vitalsConceptName:"Vitals",heightConceptName:"HEIGHT",weightConceptName:"WEIGHT",bmiConceptName:"BMI",bmiStatusConceptName:"BMI STATUS",abnormalObservationConceptName:"IS_ABNORMAL",documentsPath:"/document_images",documentsConceptName:"Document",miscConceptClassName:"Misc",abnormalConceptClassName:"Abnormal",unknownConceptClassName:"Unknown",durationConceptClassName:"Duration",conceptDetailsClassName:"Concept Details",admissionEncounterTypeName:"ADMISSION",dischargeEncounterTypeName:"DISCHARGE",imageClassName:"Image",videoClassName:"Video",locationCookieName:"bahmni.user.location",retrospectiveEntryEncounterDateCookieName:"bahmni.clinical.retrospectiveEncounterDate",JSESSIONID:"JSESSIONID",rootScopeRetrospectiveEntry:"retrospectiveEntry.encounterDate",patientFileConceptName:"Patient file",serverErrorMessages:[{serverMessage:"{{::'MEDICATION_ERROR_CAN_NOT_HAVE_MORE_THAN' | translate}}",clientMessage:"{{::'MEDICATION_ERROR_ONE_OR_MORE' | translate}}"},{serverMessage:"[Order.cannot.have.more.than.one]",clientMessage:"{{::'MEDICATION_ERROR_ONE_OR_MORE' | translate}}"}],currentUser:"bahmni.user",retrospectivePrivilege:"app:clinical:retrospective",locationPickerPrivilege:"app:clinical:locationpicker",onBehalfOfPrivilege:"app:clinical:onbehalf",nutritionalConceptName:"Nutritional Values",messageForNoObservation:"NO_OBSERVATIONS_CAPTURED",messageForNoDisposition:"NO_DISPOSTIONS_AVAILABLE_MESSAGE_KEY",messageForNoFulfillment:"NO_FULFILMENT_MESSAGE",reportsUrl:"/bahmnireports",uploadReportTemplateUrl:"/bahmnireports/upload",ruledOutdiagnosisStatus:"Ruled Out Diagnosis",registartionConsultationPrivilege:"app:common:registration_consultation_link",manageIdentifierSequencePrivilege:"Manage Identifier Sequence",closeVisitPrivilege:"app:common:closeVisit",deleteDiagnosisPrivilege:"app:clinical:deleteDiagnosis",viewPatientsPrivilege:"View Patients",editPatientsPrivilege:"Edit Patients",addVisitsPrivilege:"Add Visits",deleteVisitsPrivilege:"Delete Visits",grantProviderAccess:"app:clinical:grantProviderAccess",grantProviderAccessDataCookieName:"app.clinical.grantProviderAccessData",globalPropertyUrl:BAHMNI_CORE+"/sql/globalproperty",passwordPolicyUrl:BAHMNI_CORE+"/globalProperty/passwordPolicyProperties",fulfillmentConfiguration:"fulfillment",fulfillmentFormSuffix:" Fulfillment Form",noNavigationLinksMessage:"NO_NAVIGATION_LINKS_AVAILABLE_MESSAGE",conceptSetRepresentationForOrderFulfillmentConfig:"custom:(uuid,name,names,conceptClass,setMembers:(uuid,name,names,conceptClass,setMembers:(uuid,name,names,conceptClass,setMembers:(uuid,name,names,conceptClass))))",entityMappingUrl:RESTWS_V1+"/entitymapping",encounterTypeUrl:RESTWS_V1+"/encountertype",defaultExtensionName:"default",orderSetMemberAttributeTypeUrl:RESTWS_V1+"/ordersetmemberattributetype",orderSetUrl:RESTWS_V1+"/bahmniorderset",primaryOrderSetMemberAttributeTypeName:"Primary",bahmniBacteriologyResultsUrl:BACTERIOLOGY+"/specimen",bedFromVisit:RESTWS_V1+"/beds",ordersUrl:RESTWS_V1+"/order",formDataUrl:RESTWS_V1+"/obs",providerUrl:RESTWS_V1+"/provider",drugUrl:RESTWS_V1+"/drug",orderTypeUrl:RESTWS_V1+"/ordertype",userUrl:RESTWS_V1+"/user",passwordUrl:RESTWS_V1+"/password",formUrl:RESTWS_V1+"/form",allFormsUrl:RESTWS_V1+"/bahmniie/form/allForms",latestPublishedForms:RESTWS_V1+"/bahmniie/form/latestPublishedForms",formTranslationsUrl:RESTWS_V1+"/bahmniie/form/translations",sqlUrl:BAHMNI_CORE+"/sql",patientAttributeDateFieldFormat:"org.openmrs.util.AttributableDate",platform:"user.platform",RESTWS_V1:RESTWS_V1,baseUrl:BASE_URL,customUrl:CUSTOM_URL,faviconUrl:hostUrl+"/bahmni/favicon.ico",platformType:{other:"other"},numericDataType:"Numeric",encryptionType:{SHA3:"SHA3"},LoginInformation:"LoginInformation",ServerDateTimeFormat:"YYYY-MM-DDTHH:mm:ssZZ",calculateDose:BAHMNI_CORE+"/calculateDose",unAuthenticatedReferenceDataMap:{"/openmrs/ws/rest/v1/location?tags=Login+Location&s=byTags&v=default":"LoginLocations","/openmrs/ws/rest/v1/bahmnicore/sql/globalproperty?property=locale.allowed.list":"LocaleList"},authenticatedReferenceDataMap:authenticatedReferenceDataMap,rootDir:rootDir,dischargeUrl:BAHMNI_CORE+"/discharge",uuidRegex:"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",eventlogFilterUrl:hostUrl+"/openmrs/ws/rest/v1/eventlog/filter",bahmniConnectMetaDataDb:"metaData",serverDateTimeUrl:"/cgi-bin/systemdate",loginText:"/bahmni_config/openmrs/apps/home/whiteLabel.json",auditLogUrl:RESTWS_V1+"/auditlog",appointmentServiceUrl:RESTWS_V1+"/appointmentService",conditionUrl:EMRAPI+"/condition",allergyUrl:EMRAPI+"/allergy",dispenseDrugOrderUrl:EMRAPI+"/dispensedrugorder",conditionHistoryUrl:EMRAPI+"/conditionhistory",allergyHistoryUrl:EMRAPI+"/allergyhistory",followUpConditionConcept:"Follow-up Condition",localeLangs:"/bahmni_config/openmrs/apps/home/locale_languages.json",privilegeRequiredErrorMessage:"PRIVILEGE_REQUIRED",defaultPossibleRelativeSearchLimit:10}}(),angular.module("bahmni.common.routeErrorHandler",["ui.router"]).run(["$rootScope",function($rootScope){$rootScope.$on("$stateChangeError",function(event){event.preventDefault()})}]),(Bahmni=Bahmni||{}).Common=Bahmni.Common||{},Bahmni.Common.Util=Bahmni.Common.Util||{},angular.module("bahmni.common.util",[]).provider("$bahmniCookieStore",[function(){var self=this;self.defaultOptions={};self.setDefaultOptions=function(options){self.defaultOptions=options},self.$get=function(){return{get:function(name){var jsonCookie=$.cookie(name);return jsonCookie?angular.fromJson(decodeURIComponent(jsonCookie)):null},put:function(name,value,options){var str;options=$.extend({},self.defaultOptions,options),$.cookie.raw=!0,$.cookie(name,(str=angular.toJson(value),encodeURIComponent(str).replace(/[!'()*]/g,function(c){return"%"+c.charCodeAt(0).toString(16)})),options)},remove:function(name,options){options=$.extend({},self.defaultOptions,options),$.removeCookie(name,options)}}}}]),angular.module("httpErrorInterceptor",[]).config(["$httpProvider",function($httpProvider){var interceptor=["$rootScope","$q",function($rootScope,$q){var serverErrorMessages=Bahmni.Common.Constants.serverErrorMessages,showError=function(errorMessage){var result=_.find(serverErrorMessages,function(listItem){return listItem.serverMessage===errorMessage});_.isEmpty(result)&&$rootScope.$broadcast("event:serverError",errorMessage)};function getServerError(message){return searchString=":",indexOfFirstColon=(value=message).indexOf(searchString),value.substr(indexOfFirstColon+1).trim();var value,searchString,indexOfFirstColon}return{response:function(response){return response},responseError:function(response){var data=response.data,unexpectedError="There was an unexpected issue on the server. Please try again";if(500===response.status){var errorMessage=data.error&&data.error.message?getServerError(data.error.message):unexpectedError;showError(errorMessage)}else 409===response.status?(errorMessage=data.error&&data.error.message?getServerError(data.error.message):"Duplicate entry error",showError(errorMessage)):0===response.status?showError("Could not connect to the server. Please check your connection and try again"):405===response.status?showError(unexpectedError):400===response.status?((response.data.error.message.includes("Identifier")||response.data.error.message.includes("Identificador"))&&showError(errorMessage="REGISTRATION_DUPLICATE_ENTRY_ERROR"),showError(errorMessage="REGISTRATION_REQUIRED_FIELD")):403===response.status?(errorMessage=data.error&&data.error.message?data.error.message:unexpectedError,!function(response){if((response.data.error?response.data.error.message:response.data).search("HTTP Status 403 - Session timed out")>0)return!0}(response)?showError(errorMessage):$rootScope.$broadcast("event:auth-loginRequired")):404===response.status&&(_.includes(response.config.url,"implementation_config")||_.includes(response.config.url,"locale_")||_.includes(response.config.url,"offlineMetadata")||showError("The requested information does not exist"));return $q.reject(response)}}}];$httpProvider.interceptors.push(interceptor)}]),Bahmni.Common.Util.ArrayUtil={chunk:function(array,chunkSize){for(var chunks=[],i=0;i<array.length;i+=chunkSize)chunks.push(array.slice(i,i+chunkSize));return chunks},groupByPreservingOrder:function(records,groupingFunction,keyName,valueName){var groups=[];return records.forEach(function(record){var recordKey=groupingFunction(record),existingGroup=_.find(groups,function(group){return group[keyName]===recordKey});if(existingGroup)existingGroup[valueName].push(record);else{var newGroup={};newGroup[keyName]=recordKey,newGroup[valueName]=[record],groups.push(newGroup)}}),groups}},Bahmni.Common.Util.DateUtil={diffInDays:function(dateFrom,dateTo){return Math.floor((this.parse(dateTo)-this.parse(dateFrom))/864e5)},diffInMinutes:function(dateFrom,dateTo){return moment(dateTo).diff(moment(dateFrom),"minutes")},diffInSeconds:function(dateFrom,dateTo){return moment(dateFrom).diff(moment(dateTo),"seconds")},isInvalid:function(date){return"Invalid Date"==date},diffInDaysRegardlessOfTime:function(dateFrom,dateTo){var from=new Date(dateFrom),to=new Date(dateTo);return from.setHours(0,0,0,0),to.setHours(0,0,0,0),Math.floor((to-from)/864e5)},addSeconds:function(date,seconds){return moment(date).add(seconds,"seconds").toDate()},addMinutes:function(date,minutes){return this.addSeconds(date,60*minutes)},addDays:function(date,days){return moment(date).add(days,"day").toDate()},addMonths:function(date,months){return moment(date).add(months,"month").toDate()},addYears:function(date,years){return moment(date).add(years,"year").toDate()},subtractSeconds:function(date,seconds){return moment(date).subtract(seconds,"seconds").toDate()},subtractDays:function(date,days){return this.addDays(date,-1*days)},subtractMonths:function(date,months){return this.addMonths(date,-1*months)},subtractYears:function(date,years){return this.addYears(date,-1*years)},createDays:function(startDate,endDate){startDate=this.getDate(startDate),endDate=this.getDate(endDate);for(var numberOfDays=this.diffInDays(startDate,endDate),days=[],i=0;i<=numberOfDays;i++)days.push({dayNumber:i+1,date:this.addDays(startDate,i)});return days},getDayNumber:function(referenceDate,date){return this.diffInDays(this.getDate(referenceDate),this.getDate(date))+1},getDateWithoutTime:function(datetime){return datetime?moment(datetime).format("YYYY-MM-DD"):null},getDateInMonthsAndYears:function(date,format){format=format||"MMM YY";var dateRepresentation=isNaN(Number(date))?date:Number(date);return moment(dateRepresentation).isValid()?dateRepresentation?moment(dateRepresentation).format(format):null:date},formatDateWithTime:function(datetime){var dateRepresentation=isNaN(Number(datetime))?datetime:Number(datetime);return moment(dateRepresentation).isValid()?dateRepresentation?moment(dateRepresentation).format("DD MMM YY HH:mm"):null:datetime},formatDateWithoutTime:function(date){var dateRepresentation=isNaN(Number(date))?date:Number(date);return moment(dateRepresentation).isValid()?dateRepresentation?moment(dateRepresentation).format("DD MMM YY"):null:date},formatDateInStrictMode:function(date){var dateRepresentation=isNaN(Number(date))?date:Number(date);return moment(dateRepresentation,"YYYY-MM-DD",!0).isValid()?moment(dateRepresentation).format("DD MMM YY"):moment(dateRepresentation,"YYYY-MM-DDTHH:mm:ss.SSSZZ",!0).isValid()?moment(dateRepresentation).format("DD MMM YY"):date},formatTime:function(date){var dateRepresentation=isNaN(Number(date))?date:Number(date);return moment(dateRepresentation).isValid()?dateRepresentation?moment(dateRepresentation).format("HH:mm"):null:date},getDate:function(dateTime){return moment(this.parse(dateTime)).startOf("day").toDate()},parse:function(dateString){return dateString?moment(dateString).toDate():null},parseDatetime:function(dateTimeString){return dateTimeString?moment(dateTimeString):null},now:function(){return new Date},today:function(){return this.getDate(this.now())},endOfToday:function(){return moment(this.parse(this.now())).endOf("day").toDate()},getDateWithoutHours:function(dateString){return moment(dateString).toDate().setHours(0,0,0,0)},getDateTimeWithoutSeconds:function(dateString){return moment(dateString).toDate().setSeconds(0,0)},isSameDateTime:function(date1,date2){if(null==date1||null==date2)return!1;var dateOne=this.parse(date1),dateTwo=this.parse(date2);return dateOne.getTime()==dateTwo.getTime()},isBeforeDate:function(date1,date2){return moment(date1).isBefore(moment(date2))},isSameDate:function(date1,date2){if(null==date1||null==date2)return!1;var dateOne=this.parse(date1),dateTwo=this.parse(date2);return dateOne.getFullYear()===dateTwo.getFullYear()&&dateOne.getMonth()===dateTwo.getMonth()&&dateOne.getDate()===dateTwo.getDate()},diffInYearsMonthsDays:function(dateFrom,dateTo){dateFrom=this.parse(dateFrom),dateTo=this.parse(dateTo);var from={d:dateFrom.getDate(),m:dateFrom.getMonth(),y:dateFrom.getFullYear()},to_d=dateTo.getDate(),to_m=dateTo.getMonth(),to_y=dateTo.getFullYear(),age={d:0,m:0,y:0},daysInMonths=[31,to_y%4!=0||to_y%100==0&&to_y%400!=0?28:29,31,30,31,30,31,31,30,31,30,31];return age.y=to_y-from.y,age.m=to_m-from.m,from.m>to_m&&(age.y=age.y-1,age.m=to_m-from.m+12),age.d=to_d-from.d,from.d>to_d&&(age.m=age.m-1,from.m==to_m&&(age.y=age.y-1,age.m=age.m+12),age.d=to_d-from.d+daysInMonths[parseInt(from.m)]),{days:age.d,months:age.m,years:age.y}},convertToUnits:function(minutes){var allUnits={Years:525600,Months:43200,Weeks:10080,Days:1440,Hours:60,Minutes:1},durationRepresentation=function(value,unitName,unitValueInMinutes){return{value:value,unitName:unitName,unitValueInMinutes:unitValueInMinutes,allUnits:allUnits}};for(var unitName in allUnits){var unitValueInMinutes=allUnits[unitName];if((minutes||0!==minutes)&&minutes>=unitValueInMinutes&&minutes%unitValueInMinutes==0)return durationRepresentation(minutes/unitValueInMinutes,unitName,unitValueInMinutes)}return durationRepresentation(void 0,void 0,void 0)},getEndDateFromDuration:function(dateFrom,value,unit){var from={h:(dateFrom=this.parse(dateFrom)).getHours(),d:dateFrom.getDate(),m:dateFrom.getMonth(),y:dateFrom.getFullYear()},to=new Date(from.y,from.m,from.d,from.h);return"Months"===unit?to.setMonth(from.m+value):"Weeks"===unit?to.setDate(from.d+7*value):"Days"===unit?to.setDate(from.d+value):"Hours"===unit&&to.setHours(from.h+value),to},parseLongDateToServerFormat:function(longDate){return longDate?moment(longDate).format("YYYY-MM-DDTHH:mm:ss.SSS"):null},parseServerDateToDate:function(longDate){return longDate?moment(longDate,"YYYY-MM-DDTHH:mm:ss.SSSZZ").toDate():null},getDateTimeInSpecifiedFormat:function(date,format){return date?moment(date).format(format):null},getISOString:function(date){return date?moment(date).toDate().toISOString():null},isBeforeTime:function(time,otherTime){return moment(time,"HH:mm").format("YYYY-MM-DD")}},(Bahmni=Bahmni||{}).Common=Bahmni.Common||{},Bahmni.Common.Models=Bahmni.Common.Models||{},angular.module("bahmni.common.models",[]),(Bahmni=Bahmni||{}).Auth=Bahmni.Auth||{},angular.module("authentication",["ui.router"]),Bahmni.Auth.User=function(user){angular.extend(this,user),this.userProperties=user.userProperties||{},this.favouriteObsTemplates=this.userProperties.favouriteObsTemplates?this.userProperties.favouriteObsTemplates.split("###"):[],this.favouriteWards=this.userProperties.favouriteWards?this.userProperties.favouriteWards.split("###"):[],this.recentlyViewedPatients=this.userProperties.recentlyViewedPatients?JSON.parse(this.userProperties.recentlyViewedPatients):[],this.toContract=function(){var user=angular.copy(this);return user.userProperties.favouriteObsTemplates=this.favouriteObsTemplates.join("###"),user.userProperties.favouriteWards=this.favouriteWards.join("###"),user.userProperties.recentlyViewedPatients=JSON.stringify(this.recentlyViewedPatients),delete user.favouriteObsTemplates,delete user.favouriteWards,delete user.recentlyViewedPatients,user},this.addDefaultLocale=function(locale){this.userProperties.defaultLocale=locale},this.addToRecentlyViewed=function(patient,maxPatients){_.some(this.recentlyViewedPatients,{uuid:patient.uuid})||(this.recentlyViewedPatients.unshift({uuid:patient.uuid,name:patient.name,identifier:patient.identifier}),_.size(this.recentlyViewedPatients)>=maxPatients&&(this.recentlyViewedPatients=_.take(this.recentlyViewedPatients,maxPatients)))},this.isFavouriteObsTemplate=function(conceptName){return _.includes(this.favouriteObsTemplates,conceptName)},this.toggleFavoriteObsTemplate=function(conceptName){this.isFavouriteObsTemplate(conceptName)?this.favouriteObsTemplates=_.without(this.favouriteObsTemplates,conceptName):this.favouriteObsTemplates.push(conceptName)},this.isFavouriteWard=function(wardName){return _.includes(this.favouriteWards,wardName)},this.toggleFavoriteWard=function(wardName){this.isFavouriteWard(wardName)?this.favouriteWards=_.without(this.favouriteWards,wardName):this.favouriteWards.push(wardName)}},angular.module("authentication").service("userService",["$rootScope","$http","$q",function($rootScope,$http,$q){this.getUser=function(userName){var deferrable=$q.defer();return function(userName){return $http.get(Bahmni.Common.Constants.userUrl,{method:"GET",params:{username:userName,v:"custom:(username,uuid,person:(uuid,names,display),privileges:(name,retired),userProperties)"},cache:!1})}(userName).success(function(data){deferrable.resolve(data)}).error(function(){deferrable.reject("Unable to get user data")}),deferrable.promise},this.savePreferences=function(){var deferrable=$q.defer(),user=$rootScope.currentUser.toContract();return $http.post(Bahmni.Common.Constants.userUrl+"/"+user.uuid,{uuid:user.uuid,userProperties:user.userProperties},{withCredentials:!0}).then(function(response){$rootScope.currentUser.userProperties=response.data.userProperties,deferrable.resolve()}),deferrable.promise};this.getProviderForUser=function(uuid){var deferrable=$q.defer();return function(uuid){return $http.get(Bahmni.Common.Constants.providerUrl,{method:"GET",params:{user:uuid},cache:!1})}(uuid).success(function(data){if(data.results.length>0){var providerName=data.results[0].display.split("-")[1];data.results[0].name=providerName?providerName.trim():providerName,deferrable.resolve(data)}else deferrable.reject("UNABLE_TO_GET_PROVIDER_DATA")}).error(function(){deferrable.reject("UNABLE_TO_GET_PROVIDER_DATA")}),deferrable.promise},this.getPasswordPolicies=function(){return $http.get(Bahmni.Common.Constants.passwordPolicyUrl,{method:"GET",withCredentials:!0})}}]),angular.module("authentication").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$rootScope","$q",function($rootScope,$q){return{response:function(response){return response},responseError:function(response){return 401===response.status&&$rootScope.$broadcast("event:auth-loginRequired"),$q.reject(response)}}}])}]).run(["$rootScope","$window","$timeout",function($rootScope,$window,$timeout){$rootScope.$on("event:auth-loginRequired",function(){$timeout(function(){$window.location="../home/index.html#/login"})})}]).service("sessionService",["$rootScope","$http","$q","$bahmniCookieStore","userService",function($rootScope,$http,$q,$bahmniCookieStore,userService){var sessionResourcePath=Bahmni.Common.Constants.RESTWS_V1+"/session?v=custom:(uuid)";this.resendOTP=function(username,password){var btoa=username+":"+password;return $http.get(sessionResourcePath+"&resendOTP=true",{headers:{Authorization:"Basic "+window.btoa(btoa)},cache:!1})};var createSession=function(username,password,otp){var deferrable=$q.defer();return destroySessionFromServer().success(function(){(function(username,password,otp){var btoa=otp?username+":"+password+":"+otp:username+":"+password;return $http.get(sessionResourcePath,{headers:{Authorization:"Basic "+window.btoa(btoa)},cache:!1})})(username,password,otp).then(function(response){204==response.status&&deferrable.resolve({firstFactAuthorization:!0}),deferrable.resolve(response.data)},function(response){401==response.status?deferrable.reject("LOGIN_LABEL_WRONG_OTP_MESSAGE_KEY"):410==response.status?deferrable.reject("LOGIN_LABEL_OTP_EXPIRED"):429==response.status&&deferrable.reject("LOGIN_LABEL_MAX_FAILED_ATTEMPTS"),deferrable.reject("LOGIN_LABEL_LOGIN_ERROR_MESSAGE_KEY")})}).error(function(){deferrable.reject("LOGIN_LABEL_LOGIN_ERROR_MESSAGE_KEY")}),deferrable.promise},self=this,destroySessionFromServer=function(){return $http.delete(sessionResourcePath)};this.destroy=function(){var deferrable=$q.defer();return destroySessionFromServer().then(function(){$.cookie(Bahmni.Common.Constants.currentUser,null,{path:"/"}),$.cookie(Bahmni.Common.Constants.currentUser,null,{path:"/"}),$.cookie(Bahmni.Common.Constants.retrospectiveEntryEncounterDateCookieName,null,{path:"/"}),$.cookie(Bahmni.Common.Constants.grantProviderAccessDataCookieName,null,{path:"/"}),$rootScope.currentUser=void 0,deferrable.resolve()}),deferrable.promise},this.loginUser=function(username,password,location,otp){var deferrable=$q.defer();return createSession(username,password,otp).then(function(data){data.authenticated?($bahmniCookieStore.put(Bahmni.Common.Constants.currentUser,username,{path:"/",expires:7}),void 0!=location&&($bahmniCookieStore.remove(Bahmni.Common.Constants.locationCookieName),$bahmniCookieStore.put(Bahmni.Common.Constants.locationCookieName,{name:location.display,uuid:location.uuid},{path:"/",expires:7})),deferrable.resolve(data)):data.firstFactAuthorization?deferrable.resolve(data):deferrable.reject("LOGIN_LABEL_LOGIN_ERROR_MESSAGE_KEY")},function(errorInfo){deferrable.reject(errorInfo)}),deferrable.promise},this.get=function(){return $http.get(sessionResourcePath,{cache:!1})},this.loadCredentials=function(){var deferrable=$q.defer(),currentUser=$bahmniCookieStore.get(Bahmni.Common.Constants.currentUser);return currentUser?(this.getHealthFacilityInfo(),userService.getUser(currentUser).then(function(data){userService.getProviderForUser(data.results[0].uuid).then(function(providers){!_.isEmpty(providers.results)&&function(providers){return _.filter(providers,function(provider){return void 0==provider.retired||"false"==provider.retired}).length>0}(providers.results)?($rootScope.currentUser=new Bahmni.Auth.User(data.results[0]),$rootScope.currentUser.currentLocation=$bahmniCookieStore.get(Bahmni.Common.Constants.locationCookieName).name,$rootScope.$broadcast("event:user-credentialsLoaded",data.results[0]),deferrable.resolve(data.results[0])):(self.destroy(),deferrable.reject("YOU_HAVE_NOT_BEEN_SETUP_PROVIDER"))},function(){self.destroy(),deferrable.reject("COULD_NOT_GET_PROVIDER")})},function(){self.destroy(),deferrable.reject("Could not get roles for the current user.")}),deferrable.promise):(this.destroy().finally(function(){$rootScope.$broadcast("event:auth-loginRequired"),deferrable.reject("No User in session. Please login again.")}),deferrable.promise)},this.getLoginLocationUuid=function(){return $bahmniCookieStore.get(Bahmni.Common.Constants.locationCookieName)?$bahmniCookieStore.get(Bahmni.Common.Constants.locationCookieName).uuid:null},this.changePassword=function(currentUserUuid,oldPassword,newPassword){return $http({method:"POST",url:Bahmni.Common.Constants.passwordUrl,data:{oldPassword:oldPassword,newPassword:newPassword},headers:{"Content-Type":"application/json"}})},this.getHealthFacilityInfo=function(){return $http.get(Bahmni.Common.Constants.globalPropertyUrl,{method:"GET",params:{property:"healthFacility.info"},cache:!0}).success(function(data){$rootScope.healthFacility=data})},this.loadProviders=function(userInfo){return $http.get(Bahmni.Common.Constants.providerUrl,{method:"GET",params:{user:userInfo.uuid},cache:!1}).success(function(data){var providerUuid=data.results.length>0?data.results[0].uuid:void 0;$rootScope.currentProvider={uuid:providerUuid}})}}]).factory("authenticator",["$rootScope","$q","$window","sessionService",function($rootScope,$q,$window,sessionService){return{authenticateUser:function(){var defer=$q.defer();return sessionService.get().then(function(response){response.data.authenticated?defer.resolve():(defer.reject("User not authenticated"),$rootScope.$broadcast("event:auth-loginRequired"))}),defer.promise}}}]).directive("logOut",["sessionService","$window","configurationService","auditLogService",function(sessionService,$window,configurationService,auditLogService){return{link:function(scope,element){element.bind("click",function(){scope.$apply(function(){auditLogService.log(void 0,"USER_LOGOUT_SUCCESS",void 0,"MODULE_LABEL_LOGOUT_KEY").then(function(){sessionService.destroy().then(function(){$window.location="../home/index.html#/login"})})})})}}}]).directive("btnUserInfo",[function(){return{restrict:"CA",link:function(scope,elem){elem.bind("click",function(event){$(this).next().toggleClass("active"),event.stopPropagation()}),$(document).find("body").bind("click",function(){$(elem).next().removeClass("active")})}}}]),angular.module("bahmni.common.appFramework",["authentication"]),(Bahmni=Bahmni||{}).Common=Bahmni.Common||{},Bahmni.Common.AppFramework=Bahmni.Common.AppFramework||{},angular.module("bahmni.common.appFramework").config(["$compileProvider",function($compileProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension|file):/)}]).service("appService",["$http","$q","sessionService","$rootScope","mergeService","loadConfigService","messagingService","$translate",function($http,$q,sessionService,$rootScope,mergeService,loadConfigService,messagingService,$translate){var currentUser=null,baseUrl=Bahmni.Common.Constants.baseUrl,customUrl=Bahmni.Common.Constants.customUrl,appDescriptor=null,loadConfig=function(url){return loadConfigService.loadConfig(url,appDescriptor.contextPath)},setDefinition=function(baseResultData,customResultData){customResultData&&(_.keys(baseResultData).length>0||_.keys(customResultData.length>0))?appDescriptor.setDefinition(baseResultData,customResultData):_.keys(baseResultData).length>0&&appDescriptor.setDefinition(baseResultData)},setExtensions=function(baseResultData,customResultData){customResultData?appDescriptor.setExtensions(baseResultData,customResultData):appDescriptor.setExtensions(baseResultData)},setDefaultPageConfig=function(pageName,baseResultData,customResultData){customResultData&&(_.keys(customResultData).length>0||_.keys(baseResultData).length>0)?appDescriptor.addConfigForPage(pageName,baseResultData,customResultData):_.keys(baseResultData).length>0&&appDescriptor.addConfigForPage(pageName,baseResultData)};this.getAppDescriptor=function(){return appDescriptor},this.configBaseUrl=function(){return baseUrl},this.loadCsvFileFromConfig=function(name){return loadConfig(baseUrl+appDescriptor.contextPath+"/"+name)},this.loadConfig=function(name,shouldMerge){return loadConfig(baseUrl+appDescriptor.contextPath+"/"+name).then(function(baseResponse){return baseResponse.data.shouldOverRideConfig?loadConfig(customUrl+appDescriptor.contextPath+"/"+name).then(function(customResponse){return shouldMerge||void 0===shouldMerge?mergeService.merge(baseResponse.data,customResponse.data):[baseResponse.data,customResponse.data]},function(){return baseResponse.data}):baseResponse.data})},this.loadMandatoryConfig=function(path){return $http.get(path)},this.getAppName=function(){return this.appName},this.checkPrivilege=function(privilegeName){return function(privilegeName){return _.some(currentUser.privileges,{name:privilegeName})}(privilegeName)?$q.when(!0):(messagingService.showMessage("error",$translate.instant(Bahmni.Common.Constants.privilegeRequiredErrorMessage)+" [Privileges required: "+privilegeName+"]"),$q.reject())},this.initApp=function(appName,options,extensionFileSuffix,configPages){this.appName=appName;var appLoader=$q.defer(),extensionFileName=extensionFileSuffix&&"default"!==extensionFileSuffix.toLowerCase()?"/extension-"+extensionFileSuffix+".json":"/extension.json",promises=[],opts=options||{app:!0,extension:!0},inheritAppContext=!opts.inherit||opts.inherit;appDescriptor=new Bahmni.Common.AppFramework.AppDescriptor(appName,inheritAppContext,function(){return currentUser},mergeService);var loadCredentialsPromise=sessionService.loadCredentials(),loadProviderPromise=loadCredentialsPromise.then(sessionService.loadProviders);return promises.push(loadCredentialsPromise),promises.push(loadProviderPromise),opts.extension&&promises.push(function(appDescriptor,extensionFileName){var deferrable=$q.defer();return loadConfig(baseUrl+appDescriptor.extensionPath+extensionFileName).then(function(baseResult){baseResult.data.shouldOverRideConfig?loadConfig(customUrl+appDescriptor.extensionPath+extensionFileName).then(function(customResult){setExtensions(baseResult.data,customResult.data),deferrable.resolve(appDescriptor)},function(){setExtensions(baseResult.data),deferrable.resolve(appDescriptor)}):(setExtensions(baseResult.data),deferrable.resolve(appDescriptor))},function(error){404!==error.status?deferrable.reject(error):deferrable.resolve(appDescriptor)}),deferrable.promise}(appDescriptor,extensionFileName)),opts.template&&promises.push(function(appDescriptor){var deferrable=$q.defer();return loadConfig(baseUrl+appDescriptor.contextPath+"/appTemplate.json").then(function(result){_.keys(result.data).length>0&&appDescriptor.setTemplate(result.data),deferrable.resolve(appDescriptor)},function(error){404!==error.status?deferrable.reject(error):deferrable.resolve(appDescriptor)}),deferrable.promise}(appDescriptor)),opts.app&&promises.push(function(appDescriptor){var deferrable=$q.defer();return loadConfig(baseUrl+appDescriptor.contextPath+"/app.json").then(function(baseResult){baseResult.data.shouldOverRideConfig?loadConfig(customUrl+appDescriptor.contextPath+"/app.json").then(function(customResult){setDefinition(baseResult.data,customResult.data),deferrable.resolve(appDescriptor)},function(){setDefinition(baseResult.data),deferrable.resolve(appDescriptor)}):(setDefinition(baseResult.data),deferrable.resolve(appDescriptor))},function(error){404!==error.status?deferrable.reject(error):deferrable.resolve(appDescriptor)}),deferrable.promise}(appDescriptor)),_.isEmpty(configPages)||configPages.forEach(function(configPage){promises.push(function(pageName,appDescriptor){var deferrable=$q.defer();return loadConfig(baseUrl+appDescriptor.contextPath+"/"+pageName+".json").then(function(baseResult){baseResult.data.shouldOverRideConfig?loadConfig(customUrl+appDescriptor.contextPath+"/"+pageName+".json").then(function(customResult){setDefaultPageConfig(pageName,baseResult.data,customResult.data),deferrable.resolve(appDescriptor)},function(){setDefaultPageConfig(pageName,baseResult.data),deferrable.resolve(appDescriptor)}):(setDefaultPageConfig(pageName,baseResult.data),deferrable.resolve(appDescriptor))},function(error){404!==error.status?(messagingService.showMessage("error","Incorrect Configuration:  "+error.message),deferrable.reject(error)):deferrable.resolve(appDescriptor)}),deferrable.promise}(configPage,appDescriptor))}),$q.all(promises).then(function(results){currentUser=results[0],appLoader.resolve(appDescriptor),$rootScope.$broadcast("event:appExtensions-loaded")},function(errors){appLoader.reject(errors)}),appLoader.promise}}]),angular.module("bahmni.common.appFramework").service("mergeService",[function(){this.merge=function(base,custom){var mergeResult=$.extend(!0,{},base,custom);return deleteNullValuedKeys(mergeResult)};var deleteNullValuedKeys=function(currentObject){return _.forOwn(currentObject,function(value,key){(_.isUndefined(value)||_.isNull(value)||_.isNaN(value)||_.isObject(value)&&_.isNull(deleteNullValuedKeys(value)))&&delete currentObject[key]}),currentObject}}]),angular.module("bahmni.common.appFramework").directive("appExtensionList",["appService",function(appService){var appDescriptor=appService.getAppDescriptor();return{restrict:"EA",template:'<ul><li ng-repeat="appExtn in appExtensions"><a href="{{formatUrl(appExtn.url, extnParams)}}" class="{{appExtn.icon}}"  onclick="return false;" title="{{appExtn.label}}" ng-click="extnLinkClick(appExtn, extnParams)"> <span ng-show="showLabel">{{appExtn.label}}</span></a></li></ul>',scope:{extnPointId:"@",showLabel:"@",onExtensionClick:"&",contextModel:"&"},compile:function(cElement,cAttrs){var extnList=appDescriptor.getExtensions(cAttrs.extnPointId);return function(scope){scope.appExtensions=extnList;var model=scope.contextModel();scope.extnParams=model||{}}},controller:function($scope,$location){$scope.formatUrl=appDescriptor.formatUrl,$scope.extnLinkClick=function(extn,params){var proceedWithDefault=!0,clickHandler=$scope.onExtensionClick(),target=appDescriptor.formatUrl(extn.url,params);clickHandler&&clickHandler({src:extn,target:target,params:params,preventDefault:function(){proceedWithDefault=!1}});proceedWithDefault&&$location.url(target)}}}}]),Bahmni.Common.AppFramework.AppDescriptor=function(context,inheritContext,retrieveUserCallback,mergeService){this.id=null,this.instanceOf=null,this.description=null,this.contextModel=null,this.baseExtensionPoints=[],this.customExtensionPoints=[],this.baseExtensions={},this.customExtensions={},this.customConfigs={},this.baseConfigs={},this.extensionPath=context,this.contextPath=inheritContext?context.split("/")[0]:context;var self=this,setExtensionPointsFromExtensions=function(currentExtensions,currentExtensionPoints){_.values(currentExtensions).forEach(function(extn){extn&&(0===self[currentExtensionPoints].filter(function(ep){return ep.id===extn.extensionPointId}).length&&self[currentExtensionPoints].push({id:extn.extensionPointId,description:extn.description}))})};this.setExtensions=function(baseExtensions,customExtensions){customExtensions&&(setExtensionPointsFromExtensions(customExtensions,"customExtensionPoints"),self.customExtensions=customExtensions),self.baseExtensions=baseExtensions,setExtensionPointsFromExtensions(baseExtensions,"baseExtensionPoints")},this.setTemplate=function(template){self.instanceOf=template.id,self.description=self.description||template.description,self.contextModel=self.contextModel||template.contextModel,template.configOptions&&_.values(template.configOptions).forEach(function(opt){var existing=self.configs.filter(function(cfg){return cfg.name===opt.name});existing.length>0?existing[0].description=opt.description:self.configs.push({name:opt.name,description:opt.description,value:opt.defaultValue})})};var setConfig=function(instance,currentConfig){for(var configName in instance.config){var existingConfig=getConfig(self[currentConfig],configName);existingConfig?existingConfig.value=instance.config[configName]:self[currentConfig][configName]={name:configName,value:instance.config[configName]}}},setDefinitionExtensionPoints=function(extensionPoints,currentExtensionPoints){extensionPoints&&extensionPoints.forEach(function(iep){iep&&(0===self[currentExtensionPoints].filter(function(ep){return ep.id===iep.id}).length&&self[currentExtensionPoints].push(iep))})};this.setDefinition=function(baseInstance,customInstance){self.instanceOf=customInstance&&customInstance.instanceOf?customInstance.instanceOf:baseInstance.instanceOf,self.id=customInstance&&customInstance.id?customInstance.id:baseInstance.id,self.description=customInstance&&customInstance.description?customInstance.description:baseInstance.description,self.contextModel=customInstance&&customInstance.contextModel?customInstance.contextModel:baseInstance.contextModel,setDefinitionExtensionPoints(baseInstance.extensionPoints,"baseExtensionPoints"),setConfig(baseInstance,"baseConfigs"),customInstance&&(setDefinitionExtensionPoints(customInstance.extensionPoints,"customExtensionPoints"),setConfig(customInstance,"customConfigs"))};var getExtensions=function(extPointId,type,extensions){var currentUser=retrieveUserCallback(),currentExtensions=_.values(extensions);if(currentUser&&currentExtensions){var extnType=type||"all",userPrivileges=currentUser.privileges.map(function(priv){return priv.retired?"":priv.name}),appsExtns=currentExtensions.filter(function(extn){return("all"===extnType||extn.type===extnType)&&extn.extensionPointId===extPointId&&(!extn.requiredPrivilege||userPrivileges.indexOf(extn.requiredPrivilege)>=0)});return appsExtns.sort(function(extn1,extn2){return extn1.order-extn2.order}),appsExtns}};this.getExtensions=function(extPointId,type,shouldMerge){if(shouldMerge||void 0===shouldMerge){var mergedExtensions=mergeService.merge(self.baseExtensions,self.customExtensions);return getExtensions(extPointId,type,mergedExtensions)}return[getExtensions(extPointId,type,self.baseExtensions),getExtensions(extPointId,type,self.customExtensions)]},this.getExtensionById=function(id,shouldMerge){return shouldMerge||void 0===shouldMerge?_.values(mergeService.merge(self.baseExtensions,self.customExtensions)).filter(function(extn){return extn.id===id})[0]:[self.baseExtensions.filter(function(extn){return extn.id===id})[0],self.customExtensions.filter(function(extn){return extn.id===id})[0]]};var getConfig=function(config,configName){var cfgList=_.values(config).filter(function(cfg){return cfg.name===configName});return cfgList.length>0?cfgList[0]:null};this.getConfig=function(configName,shouldMerge){return shouldMerge||void 0===shouldMerge?getConfig(mergeService.merge(self.baseConfigs,self.customConfigs),configName):[getConfig(self.baseConfigs,configName),getConfig(self.customConfigs,configName)]},this.getConfigValue=function(configName,shouldMerge){var config=this.getConfig(configName,shouldMerge);return shouldMerge||void 0===shouldMerge?config?config.value:null:config},this.formatUrl=function(url,options,useQueryParams){var matches=url.match(/{{([^}]*)}}/g),replacedString=url,checkQueryParams=useQueryParams||!1,queryParameters=this.parseQueryParams();return matches&&matches.forEach(function(el){var key=el.replace("{{","").replace("}}",""),value=options[key];value||!0!==checkQueryParams||(value=queryParameters[key]||null),replacedString=replacedString.replace(el,value)}),replacedString.trim()},this.parseQueryParams=function(locationSearchString){var urlParams,match,pl=/\+/g,search=/([^&=]+)=?([^&]*)/g,decode=function(s){return decodeURIComponent(s.replace(pl," "))},queryString=locationSearchString||window.location.search.substring(1);for(urlParams={};match=search.exec(queryString);)urlParams[decode(match[1])]=decode(match[2]);return urlParams},this.addConfigForPage=function(pageName,baseConfig,customConfig){self.basePageConfigs=self.basePageConfigs||{},self.basePageConfigs[pageName]=baseConfig,self.customPageConfigs=self.customPageConfigs||{},self.customPageConfigs[pageName]=customConfig},this.getConfigForPage=function(pageName,shouldMerge){return shouldMerge||void 0===shouldMerge?mergeService.merge(self.basePageConfigs[pageName],self.customPageConfigs[pageName]):[_.values(self.basePageConfigs[pageName]),_.values(self.customPageConfigs[pageName])]}},angular.module("bahmni.common.appFramework").service("loadConfigService",["$http",function($http){this.loadConfig=function(url){return $http.get(url,{withCredentials:!0})}}]),angular.module("bahmni.common.uiHelper",["ngClipboard"]),angular.module("bahmni.common.uiHelper").factory("spinner",["messagingService","$timeout",function(messagingService,$timeout){var tokens=[],topLevelDiv=function(element){return $(element).find("div").eq(0)},show=function(element){return void 0!==element?function(element){return 0===$(element).find(".dashboard-section-loader").length&&topLevelDiv(element).addClass("spinnable").append('<div class="dashboard-section-loader"></div>'),{element:$(element).find(".dashboard-section-loader")}}(element):function(){var token=Math.random();tokens.push(token),0===$("#overlay").length&&$("body").prepend('<div id="overlay"><div></div></div>');var spinnerElement=$("#overlay");return spinnerElement.stop().show(),{element:spinnerElement,token:token}}()},hide=function(spinner,parentElement){var spinnerElement=spinner.element;spinner.token?(_.pull(tokens,spinner.token),0===tokens.length&&spinnerElement.fadeOut(300)):(topLevelDiv(parentElement).removeClass("spinnable"),spinnerElement&&spinnerElement.remove())};return{forPromise:function(promise,element){return $timeout(function(){var spinner=show(element);return promise.finally(function(){hide(spinner,element)}),promise})},forAjaxPromise:function(promise,element){var spinner=show(element);return promise.always(function(){hide(spinner,element)}),promise},show:show,hide:hide}}]),angular.module("bahmni.common.uiHelper").directive("nonBlank",function(){return function($scope,element,attrs){var addNonBlankAttrs=function(){element.attr({required:"required"})};if(!attrs.nonBlank)return addNonBlankAttrs();$scope.$watch(attrs.nonBlank,function(value){return value?addNonBlankAttrs():void element.removeAttr("required")})}}).directive("datepicker",function(){return{require:"ngModel",link:function($scope,element,attrs,ngModel){var maxDate=attrs.maxDate,minDate=attrs.minDate||"-120y",format=attrs.dateFormat||"dd-mm-yy";element.datepicker({changeYear:!0,changeMonth:!0,maxDate:maxDate,minDate:minDate,yearRange:"c-120:c+120",dateFormat:format,onSelect:function(dateText){$scope.$apply(function(){ngModel.$setViewValue(dateText)})}})}}}).directive("myAutocomplete",["$parse",function($parse){return{link:function(scope,element,attrs,ngModelCtrl){$parse(attrs.ngModel);var source=scope.source(),responseMap=scope.responseMap(),onSelect=scope.onSelect();element.autocomplete({autofocus:!0,minLength:2,source:function(request,response){source(attrs.id,request.term,attrs.itemType).then(function(data){var results=responseMap?responseMap(data.data):data.data;response(results)})},select:function(event,ui){return scope.$apply(function(scope){ngModelCtrl.$setViewValue(ui.item.value),scope.$eval(attrs.ngChange),null!=onSelect&&onSelect(ui.item)}),!0},search:function(event){$.trim(element.val()).length<2&&event.preventDefault()}})},require:"ngModel",scope:{source:"&",responseMap:"&",onSelect:"&"}}}]).directive("bmForm",["$timeout",function($timeout){return{link:function(scope,elem,attrs){$timeout(function(){$(elem).unbind("submit").submit(function(e){var formScope=scope.$parent,formName=attrs.name;e.preventDefault(),scope.autofillable&&$(elem).find("input").trigger("change"),formScope[formName].$valid?(formScope.$apply(attrs.ngSubmit),$(elem).removeClass("submitted-with-error")):$(elem).addClass("submitted-with-error")})},0)},require:"form",scope:{autofillable:"="}}}]).directive("patternValidate",["$timeout",function($timeout){return function($scope,element,attrs){$timeout(function(){$scope.fieldValidation&&$scope.fieldValidation[attrs.id]&&element.attr({pattern:$scope.fieldValidation[attrs.id].pattern,title:$scope.fieldValidation[attrs.id].errorMessage,type:"text"})})}}]).directive("validateOn",function(){return{link:function(scope,element,attrs,ngModelCtrl){var validationMessage=attrs.validationMessage||"Please enter a valid detail";scope.$watch(attrs.validateOn,function(value){var valid=!!value;ngModelCtrl.$setValidity("blank",valid),element[0].setCustomValidity(valid?"":validationMessage)},!0)},require:"ngModel"}}),angular.module("bahmni.common.config",[]),angular.module("bahmni.common.config").directive("showIfPrivilege",["$rootScope",function($rootScope){return{scope:{showIfPrivilege:"@"},link:function(scope,element){var privileges=scope.showIfPrivilege.split(","),requiredPrivilege=!1;if($rootScope.currentUser){var allTypesPrivileges=_.map($rootScope.currentUser.privileges,_.property("name"));requiredPrivilege=_.intersectionWith(allTypesPrivileges,privileges,_.isEqual).length>0}requiredPrivilege||element.hide()}}}]),angular.module("bahmni.common.uiHelper").service("backlinkService",["$window",function($window){var self=this,urls=[];self.reset=function(){urls=[]},self.setUrls=function(backLinks){self.reset(),angular.forEach(backLinks,function(backLink){self.addUrl(backLink)})},self.addUrl=function(backLink){urls.push(backLink)},self.addBackUrl=function(label){var backLabel=label||"Back";urls.push({label:backLabel,action:$window.history.back})},self.getUrlByLabel=function(label){return urls.filter(function(url){return url.label===label})},self.getAllUrls=function(){return urls}}]),angular.module("bahmni.common.uiHelper").directive("bmBackLinks",function(){return{template:'<ul><li ng-repeat="backLink in backLinks"><a class="back-btn" ng-if="backLink.action" accesskey="{{backLink.accessKey}}" ng-click="closeAllDialogs();backLink.action()" id="{{backLink.id}}"> <span ng-bind-html="backLink.label"></span> </a><a class="back-btn" ng-class="{\'dashboard-link\':backLink.image}" ng-if="backLink.url" accesskey="{{backLink.accessKey}}" ng-href="{{backLink.url}}" ng-click="closeAllDialogs()" id="{{backLink.id}}"  title="{{backLink.title}}"> <img ng-if="backLink.image" ng-src="{{backLink.image}}" onerror="this.onerror=null; this.src=\'../images/blank-user.gif\'"/><i ng-if="backLink.icon && !backLink.image" class="fa {{backLink.icon}}"></i></a><a class="back-btn" ng-if="backLink.state && !backLink.text" accesskey="{{backLink.accessKey}}" ui-sref="{{backLink.state}}" ng-click="closeAllDialogs()" id="{{backLink.id}}"><i ng-if="backLink.icon" class="fa {{backLink.icon}}"></i></a><a ng-if="backLink.text && backLink.requiredPrivilege" show-if-privilege="{{backLink.requiredPrivilege}}" accesskey="{{backLink.accessKey}}" ui-sref="{{backLink.state}}" id="{{backLink.id}}" class="back-btn-noIcon" ui-sref-active="active"><span>{{backLink.text | translate}}</span>        </a><a ng-if="backLink.text && !backLink.requiredPrivilege" accesskey="{{backLink.accessKey}}" ui-sref="{{backLink.state}}" id="{{backLink.id}}" class="back-btn-noIcon" ui-sref-active="active"><span>{{backLink.text | translate}}</span>        </a></li></ul>',controller:function($scope,backlinkService){$scope.backLinks=backlinkService.getAllUrls(),$scope.$on("$stateChangeSuccess",function(event,state){state.data&&state.data.backLinks&&(backlinkService.setUrls(state.data.backLinks),$scope.backLinks=backlinkService.getAllUrls())}),$scope.$on("$destroy",function(){window.onbeforeunload=void 0})},restrict:"E"}}),angular.module("bahmni.common.uiHelper").directive("bahmniAutocomplete",["$translate",function($translate){return{link:function(scope,element,attrs,ngModelCtrl){var source=scope.source(),responseMap=scope.responseMap&&scope.responseMap(),onSelect=scope.onSelect(),onEdit=scope.onEdit&&scope.onEdit(),minLength=scope.minLength||2,formElement=element[0],validationMessage=scope.validationMessage||$translate.instant("SELECT_VALUE_FROM_AUTOCOMPLETE_DEFAULT_MESSAGE"),validateIfNeeded=function(value){scope.strictSelect&&(scope.isInvalid=value!==scope.selectedValue,_.isEmpty(value)&&(scope.isInvalid=!1))};scope.$watch("initialValue",function(){scope.initialValue&&(scope.selectedValue=scope.initialValue,scope.isInvalid=!1)}),element.autocomplete({autofocus:!0,minLength:minLength,source:function(request,response){source({elementId:attrs.id,term:request.term,elementType:attrs.type}).then(function(data){var results=responseMap?responseMap(data):data;response(results)})},select:function(event,ui){return scope.selectedValue=ui.item.value,ngModelCtrl.$setViewValue(ui.item.value),null!=onSelect&&onSelect(ui.item),validateIfNeeded(ui.item.value),scope.blurOnSelect&&element.blur(),scope.$apply(),scope.$eval(attrs.ngDisabled),scope.$apply(),!0},search:function(event,ui){null!=onEdit&&onEdit(ui.item);var searchTerm=$.trim(element.val());validateIfNeeded(searchTerm),searchTerm.length<minLength&&event.preventDefault()}});var changeHanlder=function(e){validateIfNeeded(element.val())},keyUpHandler=function(e){validateIfNeeded(element.val()),scope.$apply()};element.on("change",changeHanlder),element.on("keyup",keyUpHandler),scope.$watch("isInvalid",function(){ngModelCtrl.$setValidity("selection",!scope.isInvalid),formElement.setCustomValidity(scope.isInvalid?validationMessage:"")}),scope.$on("$destroy",function(){element.off("change",changeHanlder),element.off("keyup",keyUpHandler)})},require:"ngModel",scope:{source:"&",responseMap:"&?",onSelect:"&",onEdit:"&?",minLength:"=?",blurOnSelect:"=?",strictSelect:"=?",validationMessage:"@",isInvalid:"=?",initialValue:"=?"}}}]),angular.module("bahmni.common.uiHelper").controller("MessageController",["$scope","messagingService",function($scope,messagingService){$scope.messages=messagingService.messages,$scope.getMessageText=function(level){var string="";return $scope.messages[level].forEach(function(message){string=string.concat(message.value)}),string},$scope.hideMessage=function(level){messagingService.hideMessages(level)},$scope.isErrorMessagePresent=function(){return $scope.messages.error.length>0},$scope.isInfoMessagePresent=function(){return $scope.messages.info.length>0}}]),angular.module("bahmni.common.uiHelper").service("messagingService",["$rootScope","$timeout",function($rootScope,$timeout){this.messages={error:[],info:[]};var self=this;$rootScope.$on("event:serverError",function(event,errorMessage){self.showMessage("error",errorMessage,"serverError")}),this.showMessage=function(level,message,errorEvent){var messageObject={value:"",isServerError:!1};messageObject.value=message,errorEvent?messageObject.isServerError=!0:"info"==level&&this.createTimeout("info",4e3);var index=_.findIndex(this.messages[level],function(msg){return msg.value==messageObject.value});index>=0&&this.messages[level].splice(index,1),this.messages[level].push(messageObject)},this.createTimeout=function(level,time){$timeout(function(){self.messages[level]=[]},time,!0)},this.hideMessages=function(level){self.messages[level].length=0},this.clearAll=function(){self.messages.error=[],self.messages.info=[]}}]),angular.module("bahmni.common.uiHelper").filter("days",function(){return function(startDate,endDate){return Bahmni.Common.Util.DateUtil.diffInDays(startDate,endDate)}}).filter("bahmniDateTime",function(){return function(date){return Bahmni.Common.Util.DateUtil.formatDateWithTime(date)}}).filter("bahmniDate",function(){return function(date){return Bahmni.Common.Util.DateUtil.formatDateWithoutTime(date)}}).filter("bahmniTime",function(){return function(date){return Bahmni.Common.Util.DateUtil.formatTime(date)}}).filter("bahmniDateInStrictMode",function(){return function(date){return Bahmni.Common.Util.DateUtil.formatDateInStrictMode(date)}}),(Bahmni=Bahmni||{}).Common=Bahmni.Common||{},Bahmni.Common.Domain=Bahmni.Common.Domain||{},Bahmni.Common.Domain.Helper=Bahmni.Common.Domain.Helper||{},angular.module("bahmni.common.domain",[]),function(){var nameFor={Date:function(obs){return moment(obs.value).format("D-MMM-YYYY")},Datetime:function(obs){var date=Bahmni.Common.Util.DateUtil.parseDatetime(obs.value);return null!=date?Bahmni.Common.Util.DateUtil.formatDateWithTime(date):""},Boolean:function(obs){return!0===obs.value?"Yes":!1===obs.value?"No":obs.value},Coded:function(obs){return obs.value.shortName||obs.value.name||obs.value},Object:function(obs){return nameFor.Coded(obs)},MultiSelect:function(obs){return obs.getValues().join(", ")},Default:function(obs){return obs.value}};Bahmni.Common.Domain.ObservationValueMapper={getNameFor:nameFor,map:function(obs){var type=obs.concept&&obs.concept.dataType||obs.type;return type in nameFor||(type=("object"==typeof obs.value?"Object":obs.isMultiSelect&&"MultiSelect")||"Default"),nameFor[type](obs)}}}(),angular.module("bahmni.common.domain").factory("configurationService",["$http","$q",function($http,$q){var configurationFunctions={encounterConfig:function(){return $http.get(Bahmni.Common.Constants.encounterConfigurationUrl,{params:{callerContext:"REGISTRATION_CONCEPTS"},withCredentials:!0})},patientConfig:function(){return $http.get(Bahmni.Common.Constants.patientConfigurationUrl,{withCredentials:!0})},patientAttributesConfig:function(){return $http.get(Bahmni.Common.Constants.personAttributeTypeUrl,{params:{v:"custom:(uuid,name,sortWeight,description,format,concept)"},withCredentials:!0})},dosageFrequencyConfig:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name,answers)",name:Bahmni.Common.Constants.dosageFrequencyConceptName},withCredentials:!0})},dosageInstructionConfig:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name,answers)",name:Bahmni.Common.Constants.dosageInstructionConceptName},withCredentials:!0})},stoppedOrderReasonConfig:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name,answers)",name:Bahmni.Common.Constants.stoppedOrderReasonConceptName},withCredentials:!0})},consultationNoteConfig:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name,answers)",name:Bahmni.Common.Constants.consultationNoteConceptName},withCredentials:!0})},whoStageConfig:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name,answers,setMembers)",name:Bahmni.Common.Constants.whoStageConceptName},withCredentials:!0})},radiologyObservationConfig:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name)",name:Bahmni.Common.Constants.radiologyResultConceptName},withCredentials:!0})},labOrderNotesConfig:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name)",name:Bahmni.Common.Constants.labOrderNotesConcept},withCredentials:!0})},defaultEncounterType:function(){return $http.get(Bahmni.Common.Constants.globalPropertyUrl,{params:{property:"bahmni.encounterType.default"},withCredentials:!0,transformResponse:[function(data){return data}]})},radiologyImpressionConfig:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name)",name:Bahmni.Common.Constants.impressionConcept},withCredentials:!0})},addressLevels:function(){return $http.get(Bahmni.Common.Constants.openmrsUrl+"/module/addresshierarchy/ajax/getOrderedAddressHierarchyLevels.form",{withCredentials:!0})},allTestsAndPanelsConcept:function(){return $http.get(Bahmni.Common.Constants.conceptSearchByFullNameUrl,{method:"GET",params:{v:"custom:(uuid,name:(uuid,name),setMembers:(uuid,name:(uuid,name)))",name:Bahmni.Common.Constants.allTestsAndPanelsConceptName},withCredentials:!0})},identifierTypesConfig:function(){return $http.get(Bahmni.Common.Constants.idgenConfigurationURL,{withCredentials:!0})},genderMap:function(){return $http.get(Bahmni.Common.Constants.globalPropertyUrl,{method:"GET",params:{property:"mrs.genders"},withCredentials:!0})},relationshipTypeMap:function(){return $http.get(Bahmni.Common.Constants.globalPropertyUrl,{method:"GET",params:{property:"bahmni.relationshipTypeMap"},withCredentials:!0})},relationshipTypeConfig:function(){return $http.get(Bahmni.Common.Constants.relationshipTypesUrl,{withCredentials:!0,params:{v:"custom:(aIsToB,bIsToA,uuid)"}})},loginLocationToVisitTypeMapping:function(){var url=Bahmni.Common.Constants.entityMappingUrl;return $http.get(url,{params:{mappingType:"loginlocation_visittype",s:"byEntityAndMappingType"}})},enableAuditLog:function(){return $http.get(Bahmni.Common.Constants.globalPropertyUrl,{method:"GET",params:{property:"bahmni.enableAuditLog"},withCredentials:!0})}},existingPromises={},configurations={};return{getConfigurations:function(configurationNames){var configurationsPromiseDefer=$q.defer(),promises=[];return configurationNames.forEach(function(configurationName){existingPromises[configurationName]||(existingPromises[configurationName]=configurationFunctions[configurationName]().then(function(response){configurations[configurationName]=response.data}),promises.push(existingPromises[configurationName]))}),$q.all(promises).then(function(){configurationsPromiseDefer.resolve(configurations)}),configurationsPromiseDefer.promise}}}]),(Bahmni=Bahmni||{}).Common=Bahmni.Common||{},Bahmni.Common.Logging=Bahmni.Common.Logging||{},angular.module("bahmni.common.logging",[]),angular.module("bahmni.common.logging").config(["$provide",function($provide){$provide.decorator("$exceptionHandler",function($delegate,$injector,$window,$log){var exposeException=function(exceptionDetails){window.angular_exception=window.angular_exception||[],window.angular_exception.push(exceptionDetails)};return function(exception,cause){$delegate(exception,cause),function(exception,cause){try{var messagingService=$injector.get("messagingService"),loggingService=$injector.get("loggingService"),errorMessage=exception.toString(),stackTrace=printStackTrace({e:exception}),errorDetails={timestamp:new Date,browser:$window.navigator.userAgent,errorUrl:$window.location.href,errorMessage:errorMessage,stackTrace:stackTrace,cause:cause||""};loggingService.log(errorDetails),messagingService.showMessage("error",errorMessage),exposeException(errorDetails)}catch(loggingError){$log.warn("Error logging failed"),$log.log(loggingError)}}(exception,cause)}})}]),angular.module("bahmni.common.logging").service("loggingService",function(){return{log:function(errorDetails){$.ajax({type:"POST",url:"/log",contentType:"application/json",data:angular.toJson(errorDetails)})}}}),angular.module("bahmni.common.logging").service("auditLogService",["$http","$translate","configurationService",function($http,$translate,configurationService){var DateUtil=Bahmni.Common.Util.DateUtil;this.getLogs=function(params){return params=params||{},$http.get(Bahmni.Common.Constants.auditLogUrl,{params:params}).then(function(response){return response.data.map(function(log){var date,localDate;log.dateCreated=(date=log.dateCreated,localDate=DateUtil.parseLongDateToServerFormat(date),DateUtil.getDateTimeInSpecifiedFormat(localDate,"MMMM Do, YYYY [at] HH:mm"));var entity=log.message?log.message.split("~")[1]:void 0;return log.params=entity?JSON.parse(entity):entity,log.message=log.message.split("~")[0],log.displayMessage=$translate.instant(log.message,log),log})})},this.log=function(patientUuid,eventType,messageParams,module){return configurationService.getConfigurations(["enableAuditLog"]).then(function(result){if(result.enableAuditLog){var params={};return params.patientUuid=patientUuid,params.eventType=Bahmni.Common.AuditLogEventDetails[eventType].eventType,params.message=Bahmni.Common.AuditLogEventDetails[eventType].message,params.message=messageParams?params.message+"~"+JSON.stringify(messageParams):params.message,params.module=module,$http.post(Bahmni.Common.Constants.auditLogUrl,params,{withCredentials:!0})}})}}]),(Bahmni=Bahmni||{}).Common=Bahmni.Common||{},Bahmni.Common.I18n=Bahmni.Common.I18n||{},angular.module("bahmni.common.i18n",[]),angular.module("bahmni.common.i18n",["pascalprecht.translate"]).provider("$bahmniTranslate",["$translateProvider",function($translateProvider){this.init=function(options){var preferredLanguage=window.localStorage.NG_TRANSLATE_LANG_KEY||"en";$translateProvider.useLoader("mergeLocaleFilesService",options),$translateProvider.useSanitizeValueStrategy("escaped"),$translateProvider.preferredLanguage(preferredLanguage),$translateProvider.useLocalStorage()},this.$get=[function(){return $translateProvider}]}]).filter("titleTranslate",["$translate",function($translate){return function(input){return input?input.translationKey?$translate.instant(input.translationKey):input.dashboardName?input.dashboardName:input.title?input.title:input.label?input.label:input.display?input.display:$translate.instant(input):input}}]),angular.module("bahmni.common.i18n").service("mergeLocaleFilesService",["$http","$q","mergeService",function($http,$q,mergeService){return function(options){var customLocaleUrl=Bahmni.Common.Constants.rootDir+"/bahmni_config/openmrs/i18n/",loadFile=function(url){return $http.get(url,{withCredentials:!0})};return function(options){var fileURL=options.app+"/locale_"+options.key+".json";return $q.all([loadFile("../i18n/"+fileURL).then(function(result){return result},function(){}),loadFile(customLocaleUrl+fileURL).then(function(result){return result},function(){})]).then(function(result){var baseFileData=result[0]?result[0].data:void 0,customFileData=result[1]?result[1].data:void 0;return options.shouldMerge||void 0===options.shouldMerge?mergeService.merge(baseFileData,customFileData):[baseFileData,customFileData]})}(options)}}]),angular.module("bahmni.common.services",[]),angular.module("bahmni.common.services").factory("drugService",["$http",function($http){var v="custom:(uuid,strength,name,dosageForm,concept:(uuid,name,names:(name)))";return{search:function(drugName,conceptUuid){var params={v:v,q:drugName,conceptUuid:conceptUuid,s:"ordered"};return $http.get(Bahmni.Common.Constants.drugUrl,{method:"GET",params:params,withCredentials:!0}).then(function(response){return response.data.results})},searchDecoded:function(drugname){var url=[];return url.push(Bahmni.Common.Constants.drugUrl,"?q=",drugname,"+&s=ordered&v=custom:(uuid,strength,name,dosageForm,concept:(uuid,name,names:(name)))"),url=url.join(""),$http.get(url).then(function(response){return response.data.results})},getRegimen:function(patientUuid,patientProgramUuid,drugs){var params={patientUuid:patientUuid,patientProgramUuid:patientProgramUuid,drugs:drugs};return $http.get(Bahmni.Common.Constants.bahmniRESTBaseURL+"/drugOGram/regimen",{params:params,withCredentials:!0})},getSetMembersOfConcept:function(conceptSetFullySpecifiedName,searchTerm){return $http.get(Bahmni.Common.Constants.drugUrl,{method:"GET",params:{v:v,q:conceptSetFullySpecifiedName,s:"byConceptSet",searchTerm:searchTerm},withCredentials:!0}).then(function(response){return response.data.results})}}}]),angular.module("bahmni.common.uiHelper").directive("singleSubmit",function(){var ignoreSubmit=!1;return{scope:{singleSubmit:"&"},restrict:"A",link:function(scope,element){var submitHandler=function(){ignoreSubmit||(ignoreSubmit=!0,scope.singleSubmit().finally(function(){ignoreSubmit=!1}))};element.on("submit",submitHandler),scope.$on("$destroy",function(){element.off("submit",submitHandler)})}}}),(Bahmni=Bahmni||{}).Admin=Bahmni.Admin||{},angular.module("bahmni.admin",["bahmni.common.uiHelper","bahmni.common.domain","bahmni.common.util","bahmni.common.config","bahmni.common.orders","bahmni.common.appFramework","bahmni.common.logging","ui.router","angularFileUpload"]),angular.module("bahmni.admin").factory("initialization",["$rootScope","$q","appService","spinner",function($rootScope,$q,appService,spinner){return spinner.forPromise(appService.initApp("admin").then(function(){return appService.checkPrivilege("app:admin")}))}]),angular.module("admin",["httpErrorInterceptor","bahmni.admin","bahmni.common.routeErrorHandler","ngSanitize","bahmni.common.uiHelper","bahmni.common.config","bahmni.common.orders","bahmni.common.i18n","pascalprecht.translate","ngCookies","angularFileUpload","bahmni.common.services"]),angular.module("admin").config(["$stateProvider","$httpProvider","$urlRouterProvider","$compileProvider","$bahmniTranslateProvider",function($stateProvider,$httpProvider,$urlRouterProvider,$compileProvider,$bahmniTranslateProvider){$urlRouterProvider.otherwise("/dashboard"),$stateProvider.state("admin",{abstract:!0,template:"<ui-view/>",resolve:{initialize:"initialization"}}).state("admin.dashboard",{url:"/dashboard",templateUrl:"views/adminDashboard.html",controller:"AdminDashboardController",data:{backLinks:[{label:"Home",accessKey:"h",url:"../home/",icon:"fa-home"}],extensionPointId:"org.bahmni.admin.dashboard"}}).state("admin.csv",{url:"/csv",templateUrl:"views/csvupload.html",controller:"CSVUploadController",data:{backLinks:[{label:"Home",state:"admin.dashboard",icon:"fa-home"}]}}).state("admin.csvExport",{url:"/csvExport",templateUrl:"views/csvexport.html",controller:"CSVExportController",data:{backLinks:[{label:"Home",state:"admin.dashboard",icon:"fa-home"}]}}).state("admin.orderSetDashboard",{url:"/ordersetdashboard",templateUrl:"views/orderSetDashboard.html",controller:"OrderSetDashboardController",data:{backLinks:[{label:"Home",state:"admin.dashboard",icon:"fa-home"}]}}).state("admin.orderSet",{url:"/orderset/:orderSetUuid",templateUrl:"views/orderSet.html",data:{backLinks:[{label:"Home",state:"admin.orderSetDashboard",icon:"fa-users"}]}}).state("admin.auditLog",{url:"/auditLog",templateUrl:"views/auditLog.html",controller:"auditLogController",data:{backLinks:[{label:"Home",state:"admin.dashboard",icon:"fa-home"}]}}),$httpProvider.defaults.headers.common["Disable-WWW-Authenticate"]=!0,$bahmniTranslateProvider.init({app:"admin",shouldMerge:!0})}]).run(["$rootScope","$templateCache","$window",function($rootScope,$templateCache,$window){moment.locale($window.localStorage.NG_TRANSLATE_LANG_KEY||"en"),$rootScope.$on("$viewContentLoaded",$templateCache.removeAll)}]),Bahmni.Admin.ImportedItem=function(data){angular.extend(this,data),this.baseUrl="/uploaded-files/mrs"},Bahmni.Admin.ImportedItem.prototype={hasError:function(){return this.failedRecords>0},errorFileUrl:function(){return this.baseUrl+"/"+this.errorFileName}},Bahmni.Common.OrderSet=function(){var OrderTemplate=function(member){var orderTemplate=member.orderTemplate?JSON.parse(member.orderTemplate):{drug:member.drug,dosingInstructions:member.dosingInstructions};angular.extend(this,orderTemplate)},createOrderSetMember=function(orderSetMember){var member=orderSetMember||{};return member.orderType=member.orderType||{},member.concept=member.concept||{},member.drug=member.drug||{},member.dosingInstructions=member.dosingInstructions||{},new function(member){angular.extend(this,{uuid:member.uuid,orderType:{uuid:member.orderType.uuid},orderTemplate:new OrderTemplate(member),concept:{display:member.concept.display,uuid:member.concept.uuid},retired:member.retired})}(member)};return{create:function(orderSet){var set=orderSet||{};return set.orderSetMembers=_.map(set.orderSetMembers,createOrderSetMember),new function(set){angular.extend(this,{uuid:set.uuid,name:set.name,description:set.description,operator:set.operator,orderSetMembers:set.orderSetMembers})}(set)},createOrderSetMember:createOrderSetMember}}(),angular.module("bahmni.admin").controller("CSVUploadController",["$scope","FileUploader","appService","adminImportService","spinner",function($scope,FileUploader,appService,adminImportService,spinner){var adminCSVExtension=appService.getAppDescriptor().getExtensionById("bahmni.admin.csv"),patientMatchingAlgorithm=adminCSVExtension.extensionParams.patientMatchingAlgorithm||"",urlMap={concept:{name:"Concept",url:Bahmni.Common.Constants.conceptImportUrl},conceptset:{name:"Concept Set",url:Bahmni.Common.Constants.conceptSetImportUrl},program:{name:"Program",url:Bahmni.Common.Constants.programImportUrl},patient:{name:"Patient",url:Bahmni.Common.Constants.patientImportUrl},encounter:{name:"Encounter",url:Bahmni.Common.Constants.encounterImportUrl},drug:{name:"Drug",url:Bahmni.Common.Constants.drugImportUrl},labResults:{name:"Lab Results",url:Bahmni.Common.Constants.labResultsImportUrl},referenceterms:{name:"Reference Terms",url:Bahmni.Common.Constants.referenceTermsImportUrl},relationship:{name:"Relationship Information",url:Bahmni.Common.Constants.relationshipImportUrl}},fileUploaderOptions={removeAfterUpload:!0,formData:[{patientMatchingAlgorithm:patientMatchingAlgorithm}]};$scope.loadImportedItems=function(){spinner.forPromise(adminImportService.getAllStatus().then(function(response){$scope.importedItems=response.data.map(function(item){return new Bahmni.Admin.ImportedItem(item)})}))};var configUrlMap;$scope.option={selected:"encounter"},$scope.uploader=new FileUploader(fileUploaderOptions),$scope.uploader.onBeforeUploadItem=function(item){item.url=urlMap[$scope.option.selected].url},$scope.uploader.onCompleteAll=$scope.loadImportedItems,$scope.loadImportedItems(),configUrlMap=adminCSVExtension.urlMap,_.isEmpty(configUrlMap)||(urlMap=configUrlMap),$scope.urlMaps=urlMap}]),angular.module("bahmni.admin").controller("CSVExportController",["$scope","$state","appService","$http",function($scope,$state,appService,$http){$scope.appExtensions=appService.getAppDescriptor().getExtensions("bahmni.admin.csvExport","link")||[],$scope.conceptNameInvalid=!1,$scope.getConcepts=function(request){return $http.get(Bahmni.Common.Constants.conceptUrl,{params:{q:request.term,v:"custom:(uuid,name)"}}).then(function(result){return result.data.results})},$scope.conceptSet=null,$scope.getDataResults=function(results){return results.map(function(concept){return{concept:{uuid:concept.uuid,name:concept.name.name},value:concept.name.name}})},$scope.onConceptSelected=function(){$scope.conceptSet&&window.open(Bahmni.Common.Constants.conceptSetExportUrl.replace(":conceptName",$scope.conceptSet))}}]),angular.module("bahmni.admin").controller("auditLogController",["$scope","spinner","auditLogService","messagingService","$translate",function($scope,spinner,auditLogService,messagingService,$translate){var DateUtil=Bahmni.Common.Util.DateUtil,getTranslatedMessage=function(key){return $translate.instant(key)},isNotEmpty=function(value){return void 0!==value&&""!==value},mapParamsForRequest=function(params){return _.pickBy(params,isNotEmpty)},updateIndex=function(logs,defaultFirstIndex,defaultLastIndex){$scope.firstIndex=logs.length?_.first(logs).auditLogId:defaultFirstIndex,$scope.lastIndex=logs.length?_.last(logs).auditLogId:defaultLastIndex},setMessage=function(logsLength,message){$scope.errorMessage=logsLength?"":message},updatePage=function(logs,defaultFirstIndex,defaultLastIndex,message){logs.length&&($scope.logs=logs),setMessage(logs.length,message),updateIndex(logs,defaultFirstIndex,defaultLastIndex)},defaultView=function(params,message){return auditLogService.getLogs(params).then(function(logs){logs.reverse(),updatePage(logs,0,0,message)})};$scope.next=function(){var params={lastAuditLogId:$scope.lastIndex,username:$scope.username,patientId:$scope.patientId,startFrom:$scope.startDate},promise=auditLogService.getLogs(mapParamsForRequest(params)).then(function(logs){updatePage(logs,$scope.firstIndex,$scope.lastIndex,getTranslatedMessage("NO_MORE_EVENTS_FOUND"))});spinner.forPromise(promise)},$scope.prev=function(){var promise,message=getTranslatedMessage("NO_MORE_EVENTS_FOUND");if($scope.firstIndex||$scope.lastIndex){var params={lastAuditLogId:$scope.firstIndex,username:$scope.username,patientId:$scope.patientId,prev:!0,startFrom:$scope.startDate};promise=auditLogService.getLogs(mapParamsForRequest(params)).then(function(logs){updatePage(logs,$scope.firstIndex,$scope.lastIndex,message)})}else promise=defaultView(mapParamsForRequest({defaultView:!0,startFrom:$scope.startDate}),message);spinner.forPromise(promise)},$scope.today=DateUtil.today(),$scope.maxDate=DateUtil.getDateWithoutTime($scope.today),$scope.runReport=function(){if($("#startDate").hasClass("ng-invalid-max"))messagingService.showMessage("error",getTranslatedMessage("INVALID_DATE"));else{var params={username:$scope.username,patientId:$scope.patientId,startFrom:$scope.startDate},promise=auditLogService.getLogs(mapParamsForRequest(params)).then(function(logs){$scope.logs=logs,setMessage(logs.length,getTranslatedMessage("MATCHING_EVENTS_NOT_FOUND")),updateIndex(logs,0,0)});spinner.forPromise(promise)}};!function(){$scope.logs=[];var date,promise=defaultView({startFrom:(date=$scope.startDate||$scope.today,$scope.startDate=date,date),defaultView:!0},getTranslatedMessage("NO_EVENTS_FOUND"));spinner.forPromise(promise)}()}]),angular.module("bahmni.common.domain").controller("OrderSetDashboardController",["$scope","$state","spinner","appService","$http","adminOrderSetService","$location",function($scope,$state,spinner,appService,$http,adminOrderSetService,$location){$scope.appExtensions=appService.getAppDescriptor().getExtensions("bahmni.admin.orderSet","link")||[],$scope.createOrEditOrderSet=function(uuid){uuid||(uuid="new");var url="/orderset/"+uuid;$location.url(url)},$scope.removeOrderSet=function(orderSet){var orderSetObj=Bahmni.Common.OrderSet.create(orderSet);orderSetObj.retired=!0,spinner.forPromise(adminOrderSetService.removeOrderSet(orderSetObj)).then(function(response){init()})};var init=function(){spinner.forPromise(adminOrderSetService.getAllOrderSets()).then(function(response){$scope.orderSets=response.data.results})};init()}]),function(){var mapResponse=function(concept){return{concept:{uuid:concept.uuid,name:concept.name.name},value:concept.name.name}};angular.module("bahmni.common.domain").controller("OrderSetController",["$scope","$state","spinner","$http","$q","adminOrderSetService","messagingService","orderTypeService","$window",function($scope,$state,spinner,$http,$q,adminOrderSetService,messagingService,orderTypeService,$window){$scope.operators=["ALL","ANY","ONE"],$scope.conceptNameInvalid=!1,$scope.addOrderSetMembers=function(){$scope.orderSet.orderSetMembers.push(buildOrderSetMember())};$scope.remove=function(orderSetMember){0==orderSetMember.retired?orderSetMember.retired=!0:_.remove($scope.orderSet.orderSetMembers,orderSetMember)},$scope.moveUp=function(orderSetMember){return array=$scope.orderSet.orderSetMembers,element=orderSetMember,0!==(index=_.indexOf(array,element))&&(array.splice(index,1),array.splice(index-1,0,element),!0);var array,element,index},$scope.moveDown=function(orderSetMember){return array=$scope.orderSet.orderSetMembers,element=orderSetMember,(index=_.indexOf(array,element))!==array.length-1&&(array.splice(index,1),array.splice(index+1,0,element),!0);var array,element,index};var newOrderSetMember,getConcepts=function(request,isOrderTypeMatching){return $http.get(Bahmni.Common.Constants.conceptUrl,{params:{q:request.term,v:"custom:(uuid,name:(uuid,name),conceptClass:(uuid,name,display))"}}).then(function(response){var results=_.get(response,"data.results"),resultsMatched=_.filter(results,isOrderTypeMatching);return _.map(resultsMatched,mapResponse)})};$scope.getConcepts=function(orderSetMember){var selectedOrderType=orderSetMember.orderType,orderType=_.find($scope.orderTypes,{uuid:selectedOrderType.uuid}),orderTypeNames=_.map(orderType.conceptClasses,"name");return _.partial(getConcepts,_,function(concept){return _.includes(orderTypeNames,concept.conceptClass.name)})},$scope.onSelect=function(oldOrderSetMember){newOrderSetMember=oldOrderSetMember;var currentOrderSetMember=_.find($scope.orderSet.orderSetMembers,function(orderSetMember){return orderSetMember.concept&&orderSetMember.concept.display===oldOrderSetMember.value&&!orderSetMember.concept.uuid});_.isUndefined(currentOrderSetMember)||(currentOrderSetMember.concept.uuid=oldOrderSetMember.concept.uuid,newOrderSetMember=null)},$scope.onChange=function(oldOrderSetMember){if(newOrderSetMember)return function(newOrderSetMember,oldOrderSetMember){oldOrderSetMember.concept.display=newOrderSetMember.concept.display,oldOrderSetMember.concept.uuid=newOrderSetMember.concept.uuid}(newOrderSetMember,oldOrderSetMember),void(newOrderSetMember=null);oldOrderSetMember.orderTemplate={},delete oldOrderSetMember.concept.uuid},$scope.clearConceptName=function(orderSetMember){orderSetMember.concept={},orderSetMember.orderTemplate={}},$scope.save=function(){return validationSuccess()?(getValidOrderSetMembers(),spinner.forPromise(adminOrderSetService.createOrUpdateOrderSet($scope.orderSet).then(function(response){return $state.params.orderSetUuid=response.data.uuid,$state.transitionTo($state.current,$state.params,{reload:!0,inherit:!1,notify:!0}).then(function(){messagingService.showMessage("info","Saved")})}))):$q.when({})};var getValidOrderSetMembers=function(){$scope.orderSet.orderSetMembers=_.filter($scope.orderSet.orderSetMembers,"concept")},validationSuccess=function(){return!!validateForm()&&(!!($scope.orderSet.orderSetMembers&&_.filter($scope.orderSet.orderSetMembers,function(setMember){return!setMember.retired}).length>=2)||(messagingService.showMessage("error","An orderSet should have a minimum of two orderSetMembers"),!1))},buildOrderSetMember=function(){return{orderType:{uuid:$scope.orderTypes[0].uuid}}},validateForm=function(){for(var requiredFields=angular.element($("[required]")),i=0;i<requiredFields.length;i++)if(!requiredFields[i].disabled&&!requiredFields[i].value)return messagingService.showMessage("error","Please fill all mandatory fields"),!1;return!0};!function(){var init=$q.all([orderTypeService.loadAll(),adminOrderSetService.getDrugConfig()]).then(function(results){$scope.orderTypes=results[0],$scope.treatmentConfig=results[1],"new"!==$state.params.orderSetUuid?spinner.forPromise(adminOrderSetService.getOrderSet($state.params.orderSetUuid).then(function(response){$scope.orderSet=Bahmni.Common.OrderSet.create(response.data)})):($scope.orderSet=Bahmni.Common.OrderSet.create(),$scope.orderSet.operator=$scope.operators[0],$scope.orderSet.orderSetMembers.push(Bahmni.Common.OrderSet.createOrderSetMember(buildOrderSetMember()),Bahmni.Common.OrderSet.createOrderSetMember(buildOrderSetMember())))});spinner.forPromise(init)}()}])}(),function(){var mapResult=function(drug){return{drug:{name:drug.name,uuid:drug.uuid,form:drug.dosageForm.display},value:drug.name}},selectDrug=function(selectedTemplate,orderSetMember){orderSetMember.orderTemplate.drug=selectedTemplate.drug},deleteDrugIfDrugNameIsEmpty=function(orderSetMember){orderSetMember.orderTemplate.drug.name||(orderSetMember.orderTemplate.drug={})},OrderTemplateController=function($scope,drugService){var search=function(request,orderSetMember){return drugService.search(request.term,orderSetMember.concept.uuid).then(_.partial(_.map,_,mapResult))};$scope.getDrugsOf=function(orderSetMember){return _.partial(search,_,orderSetMember)},$scope.onSelectOfDrug=function(orderSetMember){return _.partial(selectDrug,_,orderSetMember)},$scope.onChange=deleteDrugIfDrugNameIsEmpty,$scope.isRuleMode=function(orderSetMember){return void 0!==orderSetMember.orderTemplate.dosingInstructions&&null!=orderSetMember.orderTemplate.dosingInstructions.dosingRule}};OrderTemplateController.$inject=["$scope","drugService"],angular.module("bahmni.common.domain").controller("OrderTemplateController",OrderTemplateController)}(),angular.module("bahmni.admin").controller("AdminDashboardController",["$scope","$state","appService",function($scope,$state,appService){$scope.appExtensions=appService.getAppDescriptor().getExtensions($state.current.data.extensionPointId,"link")||[]}]),angular.module("bahmni.admin").service("adminImportService",["$http",function($http){this.getAllStatus=function(numberOfDays){return $http.get(Bahmni.Common.Constants.adminImportStatusUrl,{params:{numberOfDays:numberOfDays}})}}]),angular.module("bahmni.admin").service("adminOrderSetService",["$http","$q",function($http,$q){this.getAllOrderSets=function(){return $http.get(Bahmni.Common.Constants.orderSetUrl,{params:{v:"full"}})},this.getOrderSet=function(uuid){return $http.get(Bahmni.Common.Constants.orderSetUrl+"/"+uuid,{params:{v:"full"}})},this.createOrUpdateOrderSet=function(orderSet){var url;return _.each(orderSet.orderSetMembers,function(orderSetMember){orderSetMember.orderTemplate&&(orderSetMember.orderTemplate=JSON.stringify(orderSetMember.orderTemplate))}),url=orderSet.uuid?Bahmni.Common.Constants.orderSetUrl+"/"+orderSet.uuid:Bahmni.Common.Constants.orderSetUrl,$http.post(url,orderSet,{withCredentials:!0,headers:{Accept:"application/json","Content-Type":"application/json"}})},this.removeOrderSet=function(orderSet){var req={url:Bahmni.Common.Constants.orderSetUrl+"/"+orderSet.uuid,content:{"!purge":"",reason:"User deleted the orderSet."},headers:{"Content-Type":"application/json"}};return $http.delete(req.url,req.content,req.headers)},this.getDrugConfig=function(){return $http.get(Bahmni.Common.Constants.drugOrderConfigurationUrl,{withCredentials:!0}).then(function(result){var config=result.data;return config.durationUnits=[{name:"Day(s)",factor:1},{name:"Week(s)",factor:7},{name:"Month(s)",factor:30}],config})}}]),angular.module("bahmni.common.orders",[]),angular.module("bahmni.common.orders").service("orderTypeService",["$http",function($http){var self=this;self.orderTypes=[],self.loadAll=function(){return $http.get("/openmrs/ws/rest/v1/ordertype",{params:{v:"custom:(uuid,display,conceptClasses:(uuid,display,name))"}}).then(function(response){return self.orderTypes=response.data.results,self.orderTypes})},self.getOrderTypeUuid=function(orderTypeName){return _.result(_.find(self.orderTypes,{display:orderTypeName}),"uuid")}}]),Bahmni.Common.AuditLogEventDetails={USER_LOGIN_SUCCESS:{eventType:"USER_LOGIN_SUCCESS",message:"USER_LOGIN_SUCCESS_MESSAGE"},USER_LOGIN_FAILED:{eventType:"USER_LOGIN_FAILED",message:"USER_LOGIN_FAILED_MESSAGE"},USER_LOGOUT_SUCCESS:{eventType:"USER_LOGOUT_SUCCESS",message:"USER_LOGOUT_SUCCESS_MESSAGE"},OPEN_VISIT:{eventType:"OPEN_VISIT",message:"OPEN_VISIT_MESSAGE"},EDIT_VISIT:{eventType:"EDIT_VISIT",message:"EDIT_VISIT_MESSAGE"},CLOSE_VISIT:{eventType:"CLOSE_VISIT",message:"CLOSE_VISIT_MESSAGE"},CLOSE_VISIT_FAILED:{eventType:"CLOSE_VISIT_FAILED",message:"CLOSE_VISIT_FAILED_MESSAGE"},EDIT_ENCOUNTER:{eventType:"EDIT_ENCOUNTER",message:"EDIT_ENCOUNTER_MESSAGE"},VIEWED_REGISTRATION_PATIENT_SEARCH:{eventType:"VIEWED_REGISTRATION_PATIENT_SEARCH",message:"VIEWED_REGISTRATION_PATIENT_SEARCH_MESSAGE"},VIEWED_NEW_PATIENT_PAGE:{eventType:"VIEWED_NEW_PATIENT_PAGE",message:"VIEWED_NEW_PATIENT_PAGE_MESSAGE"},REGISTER_NEW_PATIENT:{eventType:"REGISTER_NEW_PATIENT",message:"REGISTER_NEW_PATIENT_MESSAGE"},EDIT_PATIENT_DETAILS:{eventType:"EDIT_PATIENT_DETAILS",message:"EDIT_PATIENT_DETAILS_MESSAGE"},ACCESSED_REGISTRATION_SECOND_PAGE:{eventType:"ACCESSED_REGISTRATION_SECOND_PAGE",message:"ACCESSED_REGISTRATION_SECOND_PAGE_MESSAGE"},VIEWED_PATIENT_DETAILS:{eventType:"VIEWED_PATIENT_DETAILS",message:"VIEWED_PATIENT_DETAILS_MESSAGE"},PRINT_PATIENT_STICKER:{eventType:"PRINT_PATIENT_STICKER",message:"PRINT_PATIENT_STICKER_MESSAGE"},VIEWED_CLINICAL_PATIENT_SEARCH:{eventType:"VIEWED_CLINICAL_PATIENT_SEARCH",message:"VIEWED_PATIENT_SEARCH_MESSAGE"},VIEWED_CLINICAL_DASHBOARD:{eventType:"VIEWED_CLINICAL_DASHBOARD",message:"VIEWED_CLINICAL_DASHBOARD_MESSAGE"},VIEWED_OBSERVATIONS_TAB:{eventType:"VIEWED_OBSERVATIONS_TAB",message:"VIEWED_OBSERVATIONS_TAB_MESSAGE"},VIEWED_DIAGNOSIS_TAB:{eventType:"VIEWED_DIAGNOSIS_TAB",message:"VIEWED_DIAGNOSIS_TAB_MESSAGE"},VIEWED_ALLERGY_TAB:{eventType:"VIEWED_ALLERGY_TAB",message:"VIEWED_ALLERGY_TAB_MESSAGE"},VIEWED_TREATMENT_TAB:{eventType:"VIEWED_TREATMENT_TAB",message:"VIEWED_TREATMENT_TAB_MESSAGE"},VIEWED_DISPOSITION_TAB:{eventType:"VIEWED_DISPOSITION_TAB",message:"VIEWED_DISPOSITION_TAB_MESSAGE"},VIEWED_DASHBOARD_SUMMARY:{eventType:"VIEWED_DASHBOARD_SUMMARY",message:"VIEWED_DASHBOARD_SUMMARY_MESSAGE"},VIEWED_ORDERS_TAB:{eventType:"VIEWED_ORDERS_TAB",message:"VIEWED_ORDERS_TAB_MESSAGE"},VIEWED_BACTERIOLOGY_TAB:{eventType:"VIEWED_BACTERIOLOGY_TAB",message:"VIEWED_BACTERIOLOGY_TAB_MESSAGE"},VIEWED_INVESTIGATION_TAB:{eventType:"VIEWED_INVESTIGATION_TAB",message:"VIEWED_INVESTIGATION_TAB_MESSAGE"},VIEWED_SUMMARY_PRINT:{eventType:"VIEWED_SUMMARY_PRINT",message:"VIEWED_SUMMARY_PRINT_MESSAGE"},VIEWED_VISIT_DASHBOARD:{eventType:"VIEWED_VISIT_DASHBOARD",message:"VIEWED_VISIT_DASHBOARD_MESSAGE"},VIEWED_VISIT_PRINT:{eventType:"VIEWED_VISIT_PRINT",message:"VIEWED_VISIT_PRINT_MESSAGE"},VIEWED_DASHBOARD_OBSERVATION:{eventType:"VIEWED_DASHBOARD_OBSERVATION",message:"VIEWED_DASHBOARD_OBSERVATION_MESSAGE"},VIEWED_PATIENTPROGRAM:{eventType:"VIEWED_PATIENTPROGRAM",message:"VIEWED_PATIENTPROGRAM_MESSAGE"},RUN_REPORT:{eventType:"RUN_REPORT",message:"RUN_REPORT_MESSAGE"}};